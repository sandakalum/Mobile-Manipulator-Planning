#!/usr/bin/env python
# -*- coding:utf-8 -*-
import rospy
from sensor_msgs.msg   import LaserScan

class LaserScanClass:
  def __init__(self):

    input_topic  = rospy.get_param('~input_scan_name', 'urg_scan')
    output_topic = rospy.get_param('~output_scan_name', 'scan')

    self.range_min = rospy.get_param('~range_min', 0.1)
    self.range_max = rospy.get_param('~range_max', 20)

    self.laser_pub = rospy.Publisher(output_topic, LaserScan, queue_size=1000)
    rospy.Subscriber(input_topic, LaserScan, self.callback_laser, queue_size=1000)
    
  def callback_laser(self, data):

    try:
      laser = data
      laser.range_min = self.range_min
      laser.range_max = self.range_max

      ranges_list = list(laser.ranges)

      #intensist
      for i in range(len(laser.intensities)):
        if (laser.intensities[i] == 0.0):
          ranges_list[i] = self.range_max - 1

      #max
      for i in range(len(laser.ranges)):
        if (laser.ranges[i] > self.range_max):
          ranges_list[i] = self.range_max - 1

      #min
      # for i in range(len(laser.ranges)):
      #   if (laser.ranges[i] < self.range_min):
      #     ranges_list[i] = 0

      laser.ranges = tuple(ranges_list)

      self.laser_pub.publish(laser)
    except: rospy.logerr('Error Laser data conversion failed : Could not convert')


if __name__ == '__main__':
  rospy.init_node('portable_laser', anonymous=True)
  try:
    LaserScanClass()
    rospy.spin()
  except rospy.ROSInterruptException:
    rospy.loginfo("portable_laser node finished.")
