<launch>

<!-- portable number -->
<arg name="number" default="1"/>

<!-- initial pose -->
<arg name="initialpose_x" default="0.0"/>
<arg name="initialpose_y" default="0.0"/>
<arg name="initialpose_a" default="0.0"/>

<!-- global frame name -->
<arg name="server_frame" default="/map"/>
<arg name="portable_frame" value="server_pot_$(arg number)"/>

<group ns="portable$(arg number)">

  <!-- local frame name -->
  <arg name="global_frame"   value="map$(arg number)"/>
  <arg name="odom"           value="odom$(arg number)"/>
  <arg name="base_footprint" value="base_footprint$(arg number)"/>
  <arg name="base_scan"      value="base_scan$(arg number)"/>

  <!-- local map server -->
  <arg name="map_file" value="$(find tms_rc_ninebot)/maps/map_bsen_p/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="$(arg global_frame)"/>
  </node>

  <!-- nucleo communication -->
  <node pkg="tms_rc_ninebot" type="ninebot_serial.py" name="ninebot_serial" output="screen">
    <param name="port" value="/dev/ttyACM1"/>
  </node>

  <!-- ninebot odometry -->
  <node pkg="tms_rc_ninebot" type="ninebot_odometry.py" name="ninebot_odometry" output="screen">
    <param name="odom_frame_id" value="$(arg odom)"/>
    <param name="base_frame_id" value="$(arg base_footprint)"/>
  </node>
  
  <!-- ninebot static tf -->
  <node pkg="tf" type="static_transform_publisher" name="foot_to_scan"
    args="0.1 0 0.36 0 0 0 $(arg base_footprint) $(arg base_scan) 100">
  </node>

  <!-- ninebot controller -->
  <node pkg="tms_rc_ninebot" type="ninebot_controller.py" name="ninebot_controller" output="screen">
    <param name="global_frame_id" value="$(arg global_frame)"/>
    <param name="move_base" value="false"/> 
  </node>

  <!-- ninebot human -->
  <node pkg="tms_rc_ninebot" type="ninebot_human.py" name="ninebot_human" output="screen">
    <param name="pose_topic_name"   value="/ninebot_pos"/>
    <param name="cloud_topic_name"  value="/cloud_ninebot_cropped"/>
    <param name="people_topic_name" value="/people_ninebot_cropped"/>
    <param name="global_frame_id"   value="$(arg global_frame)"/>
    <param name="base_frame_id"     value="$(arg base_footprint)"/>
  </node>

  <!-- ninebot urg -->
  <arg name="urg_range" value="1.5708"/>
  <node pkg="urg_node" type="urg_node" name="urg_node" output="screen">
    <param name="frame_id" value="$(arg base_scan)"/>
    <param name="ip_address" value="192.168.0.10"/>
    <param name="angle_min" value="-$(arg urg_range)"/>
    <param name="angle_max" value="$(arg urg_range)"/>
  </node>

  <!-- navigation stack-->
  <include file="$(find tms_rc_ninebot)/launch/navigation_stack.xml">
    <!-- <arg name="amcl"       value="false"/> -->
    <arg name="move_base"  value="false"/>
  </include>
  <param name="amcl/initial_pose_x"  value="$(arg initialpose_x)"/>
  <param name="amcl/initial_pose_y"  value="$(arg initialpose_y)"/>
  <param name="amcl/initial_pose_a"  value="$(arg initialpose_a)"/>
  <param name="amcl/odom_frame_id"   value="$(arg odom)"/>
  <param name="amcl/base_frame_id"   value="$(arg base_footprint)"/>
  <param name="amcl/global_frame_id" value="$(arg global_frame)"/>

  <!--<node pkg="tf" type="static_transform_publisher" name="map_to_odom"
    args="$(arg initialpose_x) $(arg initialpose_y) 0 $(arg initialpose_a) 0 0 $(arg global_frame) $(arg odom) 100">
  </node>-->

  <!-- ninebot visualization -->
  <node pkg="tms_rc_ninebot" type="ninebot_visualization.py" name="ninebot_visualization">
    <param name="portable_number"   value="$(arg number)"/>
    <param name="global_frame_id"   value="$(arg global_frame)"/>
    <param name="base_frame_id"     value="$(arg base_footprint)"/>
    <param name="server_frame_id"   value="$(arg server_frame)"/>
    <param name="portable_frame_id" value="$(arg portable_frame)"/>
  </node>

  <!-- ninebot wiiremote -->
  <node pkg="tms_rc_ninebot" type="ninebot_wiiremote.py" name="ninebot_wiiremote" output="screen">
    <param name="cmd_vel_topic" value="serial_twist"/>
  </node>
</group>
</launch>
