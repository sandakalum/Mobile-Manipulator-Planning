// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __GripperExtAxes_hh__
#define __GripperExtAxes_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif



#ifndef __Common_hh_EXTERNAL_GUARD__
#define __Common_hh_EXTERNAL_GUARD__
#include <Common.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





#ifndef __GripperExtAxes__
#define __GripperExtAxes__

class GripperExtAxes;
class _objref_GripperExtAxes;
class _impl_GripperExtAxes;

typedef _objref_GripperExtAxes* GripperExtAxes_ptr;
typedef GripperExtAxes_ptr GripperExtAxesRef;

class GripperExtAxes_Helper {
public:
  typedef GripperExtAxes_ptr _ptr_type;

  static _ptr_type _nil();
  static _CORBA_Boolean is_nil(_ptr_type);
  static void release(_ptr_type);
  static void duplicate(_ptr_type);
  static void marshalObjRef(_ptr_type, cdrStream&);
  static _ptr_type unmarshalObjRef(cdrStream&);
};

typedef _CORBA_ObjRef_Var<_objref_GripperExtAxes, GripperExtAxes_Helper> GripperExtAxes_var;
typedef _CORBA_ObjRef_OUT_arg<_objref_GripperExtAxes,GripperExtAxes_Helper > GripperExtAxes_out;

#endif

// interface GripperExtAxes
class GripperExtAxes {
public:
  // Declarations for this interface type.
  typedef GripperExtAxes_ptr _ptr_type;
  typedef GripperExtAxes_var _var_type;

  static _ptr_type _duplicate(_ptr_type);
  static _ptr_type _narrow(::CORBA::Object_ptr);
  static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
  
  static _ptr_type _nil();

  static inline void _marshalObjRef(_ptr_type, cdrStream&);

  static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
    omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
    if (o)
      return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
    else
      return _nil();
  }

  static _core_attr const char* _PD_repoId;

  // Other IDL defined within this scope.
  
};

class _objref_GripperExtAxes :
  public virtual ::CORBA::Object,
  public virtual omniObjRef
{
public:
  ::CORBA::Boolean servoOn();
  ::CORBA::Boolean servoOff();
  ::CORBA::Boolean isPowerOn();
  ::CORBA::Boolean isServoOn();
  ::CORBA::Boolean pause();
  ::CORBA::Boolean resume();
  ::CORBA::Boolean stop();
  ::CORBA::Boolean abort();
  ::CORBA::Boolean isMoving();
  ::CORBA::Boolean clearAlarms();
  ::CORBA::Boolean getActiveAlarm(::CORBA::ULong maximumNumber, ::CORBA::ULong& numberOfAlarm, ::AlarmSeq_out alarmArray);
  ::CORBA::Boolean getSoftLimit(::CORBA::ULong& numberOfData, ::LimitSeq_out limitArray);
  ::CORBA::Boolean getVersion(::CORBA::String_out versionMessage);

  inline _objref_GripperExtAxes()  { _PR_setobj(0); }  // nil
  _objref_GripperExtAxes(omniIOR*, omniIdentity*);

protected:
  virtual ~_objref_GripperExtAxes();

  
private:
  virtual void* _ptrToObjRef(const char*);

  _objref_GripperExtAxes(const _objref_GripperExtAxes&);
  _objref_GripperExtAxes& operator = (const _objref_GripperExtAxes&);
  // not implemented

  friend class GripperExtAxes;
};

class _pof_GripperExtAxes : public _OMNI_NS(proxyObjectFactory) {
public:
  inline _pof_GripperExtAxes() : _OMNI_NS(proxyObjectFactory)(GripperExtAxes::_PD_repoId) {}
  virtual ~_pof_GripperExtAxes();

  virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
  virtual _CORBA_Boolean is_a(const char*) const;
};

class _impl_GripperExtAxes :
  public virtual omniServant
{
public:
  virtual ~_impl_GripperExtAxes();

  virtual ::CORBA::Boolean servoOn() = 0;
  virtual ::CORBA::Boolean servoOff() = 0;
  virtual ::CORBA::Boolean isPowerOn() = 0;
  virtual ::CORBA::Boolean isServoOn() = 0;
  virtual ::CORBA::Boolean pause() = 0;
  virtual ::CORBA::Boolean resume() = 0;
  virtual ::CORBA::Boolean stop() = 0;
  virtual ::CORBA::Boolean abort() = 0;
  virtual ::CORBA::Boolean isMoving() = 0;
  virtual ::CORBA::Boolean clearAlarms() = 0;
  virtual ::CORBA::Boolean getActiveAlarm(::CORBA::ULong maximumNumber, ::CORBA::ULong& numberOfAlarm, ::AlarmSeq_out alarmArray) = 0;
  virtual ::CORBA::Boolean getSoftLimit(::CORBA::ULong& numberOfData, ::LimitSeq_out limitArray) = 0;
  virtual ::CORBA::Boolean getVersion(::CORBA::String_out versionMessage) = 0;
  
public:  // Really protected, workaround for xlC
  virtual _CORBA_Boolean _dispatch(omniCallHandle&);

private:
  virtual void* _ptrToInterface(const char*);
  virtual const char* _mostDerivedRepoId();
  
};




class POA_GripperExtAxes :
  public virtual _impl_GripperExtAxes,
  public virtual ::PortableServer::ServantBase
{
public:
  virtual ~POA_GripperExtAxes();

  inline ::GripperExtAxes_ptr _this() {
    return (::GripperExtAxes_ptr) _do_this(::GripperExtAxes::_PD_repoId);
  }
};







#undef _core_attr
#undef _dyn_attr



inline void
GripperExtAxes::_marshalObjRef(::GripperExtAxes_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_GripperExtAxes
#endif

#endif  // __GripperExtAxes_hh__

