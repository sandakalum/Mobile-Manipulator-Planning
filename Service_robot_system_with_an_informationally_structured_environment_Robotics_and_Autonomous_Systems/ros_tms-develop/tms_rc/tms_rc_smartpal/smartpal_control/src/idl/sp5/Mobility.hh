// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __Mobility_hh__
#define __Mobility_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif



#ifndef __Common_hh_EXTERNAL_GUARD__
#define __Common_hh_EXTERNAL_GUARD__
#include <Common.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE YeRTUnitMobility

_CORBA_MODULE_BEG

#ifndef __YeRTUnitMobility_mmobility__
#define __YeRTUnitMobility_mmobility__

  class mobility;
  class _objref_mobility;
  class _impl_mobility;
  
  typedef _objref_mobility* mobility_ptr;
  typedef mobility_ptr mobilityRef;

  class mobility_Helper {
  public:
    typedef mobility_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_mobility, mobility_Helper> mobility_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_mobility,mobility_Helper > mobility_out;

#endif

  // interface mobility
  class mobility {
  public:
    // Declarations for this interface type.
    typedef mobility_ptr _ptr_type;
    typedef mobility_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_mobility :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    ::CORBA::Boolean stop();
    ::CORBA::Boolean clearAlarm();
    ::CORBA::Boolean setPower(::CORBA::Boolean OnOff);
    ::CORBA::Boolean setServo(::CORBA::Boolean OnOff);
    ::CORBA::Boolean getVersion(::CORBA::String_out ver);
    ::CORBA::Boolean pause();
    ::CORBA::Boolean resume();
    ::CORBA::Boolean unlock();
    ::CORBA::Boolean getServoStatus(::CORBA::ULong axisid, ::CORBA::Boolean& status);
    ::CORBA::Boolean getActiveAlarm(::CORBA::Short numOfAlarm, ::CORBA::Short& numOfActiveAlarm, ::AlarmSeq_out activeAlarms);
    ::CORBA::Boolean setPosition(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_);
    ::CORBA::Boolean getPosition(::CORBA::Double& x_, ::CORBA::Double& y_, ::CORBA::Double& theta_);
    ::CORBA::Boolean getState(::CORBA::Short& state, ::CORBA::String_out msg);
    ::CORBA::Boolean setVelocity(::CORBA::Double velT, ::CORBA::Double velR);
    ::CORBA::Boolean setAcceleration(::CORBA::Double accT, ::CORBA::Double accR);
    ::CORBA::Boolean setJogTimeout(::CORBA::Short timeout);
    ::CORBA::Boolean moveJog(::CORBA::Double vx_, ::CORBA::Double vy_, ::CORBA::Double vtheta_);
    ::CORBA::Boolean moveForward(::CORBA::Double x_);
    ::CORBA::Boolean moveTurn(::CORBA::Double theta_);
    ::CORBA::Boolean moveTurnContinuous(::CORBA::Double theta_);
    ::CORBA::Boolean moveLinear(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_);
    ::CORBA::Boolean moveLinearAbs(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_);
    ::CORBA::Boolean moveCircular(::CORBA::Double centerX_, ::CORBA::Double centerY_, ::CORBA::Double angle);
    ::CORBA::Boolean moveContinuous(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_);
    ::CORBA::Boolean moveWagon(::CORBA::Double x_, ::CORBA::Double y_);
    ::CORBA::Boolean moveWagonAbs(::CORBA::Double x_, ::CORBA::Double y_);
    ::CORBA::Boolean getBatteryVoltage(::CORBA::Short& voltage);

    inline _objref_mobility()  { _PR_setobj(0); }  // nil
    _objref_mobility(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_mobility();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_mobility(const _objref_mobility&);
    _objref_mobility& operator = (const _objref_mobility&);
    // not implemented

    friend class mobility;
  };

  class _pof_mobility : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_mobility() : _OMNI_NS(proxyObjectFactory)(mobility::_PD_repoId) {}
    virtual ~_pof_mobility();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_mobility :
    public virtual omniServant
  {
  public:
    virtual ~_impl_mobility();

    virtual ::CORBA::Boolean stop() = 0;
    virtual ::CORBA::Boolean clearAlarm() = 0;
    virtual ::CORBA::Boolean setPower(::CORBA::Boolean OnOff) = 0;
    virtual ::CORBA::Boolean setServo(::CORBA::Boolean OnOff) = 0;
    virtual ::CORBA::Boolean getVersion(::CORBA::String_out ver) = 0;
    virtual ::CORBA::Boolean pause() = 0;
    virtual ::CORBA::Boolean resume() = 0;
    virtual ::CORBA::Boolean unlock() = 0;
    virtual ::CORBA::Boolean getServoStatus(::CORBA::ULong axisid, ::CORBA::Boolean& status) = 0;
    virtual ::CORBA::Boolean getActiveAlarm(::CORBA::Short numOfAlarm, ::CORBA::Short& numOfActiveAlarm, ::AlarmSeq_out activeAlarms) = 0;
    virtual ::CORBA::Boolean setPosition(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean getPosition(::CORBA::Double& x_, ::CORBA::Double& y_, ::CORBA::Double& theta_) = 0;
    virtual ::CORBA::Boolean getState(::CORBA::Short& state, ::CORBA::String_out msg) = 0;
    virtual ::CORBA::Boolean setVelocity(::CORBA::Double velT, ::CORBA::Double velR) = 0;
    virtual ::CORBA::Boolean setAcceleration(::CORBA::Double accT, ::CORBA::Double accR) = 0;
    virtual ::CORBA::Boolean setJogTimeout(::CORBA::Short timeout) = 0;
    virtual ::CORBA::Boolean moveJog(::CORBA::Double vx_, ::CORBA::Double vy_, ::CORBA::Double vtheta_) = 0;
    virtual ::CORBA::Boolean moveForward(::CORBA::Double x_) = 0;
    virtual ::CORBA::Boolean moveTurn(::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean moveTurnContinuous(::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean moveLinear(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean moveLinearAbs(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean moveCircular(::CORBA::Double centerX_, ::CORBA::Double centerY_, ::CORBA::Double angle) = 0;
    virtual ::CORBA::Boolean moveContinuous(::CORBA::Double x_, ::CORBA::Double y_, ::CORBA::Double theta_) = 0;
    virtual ::CORBA::Boolean moveWagon(::CORBA::Double x_, ::CORBA::Double y_) = 0;
    virtual ::CORBA::Boolean moveWagonAbs(::CORBA::Double x_, ::CORBA::Double y_) = 0;
    virtual ::CORBA::Boolean getBatteryVoltage(::CORBA::Short& voltage) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


_CORBA_MODULE_END



_CORBA_MODULE POA_YeRTUnitMobility
_CORBA_MODULE_BEG

  class mobility :
    public virtual YeRTUnitMobility::_impl_mobility,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~mobility();

    inline ::YeRTUnitMobility::mobility_ptr _this() {
      return (::YeRTUnitMobility::mobility_ptr) _do_this(::YeRTUnitMobility::mobility::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_YeRTUnitMobility
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr



inline void
YeRTUnitMobility::mobility::_marshalObjRef(::YeRTUnitMobility::mobility_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_Mobility
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_Mobility
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_Mobility
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_Mobility
#endif

#endif  // __Mobility_hh__

