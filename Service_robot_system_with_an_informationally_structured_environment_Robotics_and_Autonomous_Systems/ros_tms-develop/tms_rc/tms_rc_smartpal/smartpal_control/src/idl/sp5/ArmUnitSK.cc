// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "ArmUnit.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



void
Acceleration::operator>>= (cdrStream &_n) const
{
  translation >>= _n;
  rotation >>= _n;

}

void
Acceleration::operator<<= (cdrStream &_n)
{
  (::CORBA::ULong&)translation <<= _n;
  (::CORBA::ULong&)rotation <<= _n;

}

void
CartesianPos::operator>>= (cdrStream &_n) const
{
  px >>= _n;
  py >>= _n;
  pz >>= _n;
  rx >>= _n;
  ry >>= _n;
  rz >>= _n;

}

void
CartesianPos::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)px <<= _n;
  (::CORBA::Double&)py <<= _n;
  (::CORBA::Double&)pz <<= _n;
  (::CORBA::Double&)rx <<= _n;
  (::CORBA::Double&)ry <<= _n;
  (::CORBA::Double&)rz <<= _n;

}

void
CartesianVel::operator>>= (cdrStream &_n) const
{
  x >>= _n;
  y >>= _n;
  z >>= _n;
  rx >>= _n;
  ry >>= _n;
  rz >>= _n;

}

void
CartesianVel::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)x <<= _n;
  (::CORBA::Double&)y <<= _n;
  (::CORBA::Double&)z <<= _n;
  (::CORBA::Double&)rx <<= _n;
  (::CORBA::Double&)ry <<= _n;
  (::CORBA::Double&)rz <<= _n;

}

void
LimitValue::operator>>= (cdrStream &_n) const
{
  upper >>= _n;
  lower >>= _n;

}

void
LimitValue::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)upper <<= _n;
  (::CORBA::Double&)lower <<= _n;

}

void
Velocity::operator>>= (cdrStream &_n) const
{
  translation >>= _n;
  rotation >>= _n;

}

void
Velocity::operator<<= (cdrStream &_n)
{
  (::CORBA::Double&)translation <<= _n;
  (::CORBA::Double&)rotation <<= _n;

}

ArmUnit_ptr ArmUnit_Helper::_nil() {
  return ::ArmUnit::_nil();
}

::CORBA::Boolean ArmUnit_Helper::is_nil(::ArmUnit_ptr p) {
  return ::CORBA::is_nil(p);

}

void ArmUnit_Helper::release(::ArmUnit_ptr p) {
  ::CORBA::release(p);
}

void ArmUnit_Helper::marshalObjRef(::ArmUnit_ptr obj, cdrStream& s) {
  ::ArmUnit::_marshalObjRef(obj, s);
}

ArmUnit_ptr ArmUnit_Helper::unmarshalObjRef(cdrStream& s) {
  return ::ArmUnit::_unmarshalObjRef(s);
}

void ArmUnit_Helper::duplicate(::ArmUnit_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

ArmUnit_ptr
ArmUnit::_duplicate(::ArmUnit_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

ArmUnit_ptr
ArmUnit::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


ArmUnit_ptr
ArmUnit::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

ArmUnit_ptr
ArmUnit::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_ArmUnit _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_ArmUnit* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_ArmUnit;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* ArmUnit::_PD_repoId = "IDL:ArmUnit:1.0";


_objref_ArmUnit::~_objref_ArmUnit() {
  
}


_objref_ArmUnit::_objref_ArmUnit(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::ArmUnit::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
_objref_ArmUnit::_ptrToObjRef(const char* id)
{
  if( id == ::ArmUnit::_PD_repoId )
    return (::ArmUnit_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::ArmUnit::_PD_repoId) )
    return (::ArmUnit_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _clong
class _0RL_cd_c6f79e9630c46731_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_00000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->abort();


}

::CORBA::Long _objref_ArmUnit::abort()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_10000000, "abort", 6);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_20000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->clearAlarms();


}

::CORBA::Long _objref_ArmUnit::clearAlarms()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_20000000, "clearAlarms", 12);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cunsigned_plong_o_cunsigned_plong_o_cAlarmSeq
class _0RL_cd_c6f79e9630c46731_30000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_30000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::ULong arg_0;
  ::CORBA::ULong arg_1;
  AlarmSeq_var arg_2;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_30000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_30000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::ULong&)arg_0 <<= _n;

}

void _0RL_cd_c6f79e9630c46731_30000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_1 >>= _n;
  (const AlarmSeq&) arg_2 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_30000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  (::CORBA::ULong&)arg_1 <<= _n;
  arg_2 = new AlarmSeq;
  (AlarmSeq&)arg_2 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_30000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_30000000* tcd = (_0RL_cd_c6f79e9630c46731_30000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getActiveAlarm(tcd->arg_0, tcd->arg_1, tcd->arg_2.out());


}

::CORBA::Long _objref_ArmUnit::getActiveAlarm(::CORBA::ULong numOfRequestAlm, ::CORBA::ULong& numOfResponseAlm, ::AlarmSeq_out alarms)
{
  _0RL_cd_c6f79e9630c46731_30000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_40000000, "getActiveAlarm", 15);
  _call_desc.arg_0 = numOfRequestAlm;

  _invoke(_call_desc);
  numOfResponseAlm = _call_desc.arg_1;
  alarms = _call_desc.arg_2._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cFrameID_o_cDoubleSeq
class _0RL_cd_c6f79e9630c46731_50000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_50000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  FrameID arg_0;
  DoubleSeq_var arg_1;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_50000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_50000000::unmarshalArguments(cdrStream& _n)
{
  (FrameID&)arg_0 <<= _n;

}

void _0RL_cd_c6f79e9630c46731_50000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const DoubleSeq&) arg_1 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_50000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_1 = new DoubleSeq;
  (DoubleSeq&)arg_1 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_50000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_60000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_50000000* tcd = (_0RL_cd_c6f79e9630c46731_50000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getCommandPos(tcd->arg_0, tcd->arg_1.out());


}

::CORBA::Long _objref_ArmUnit::getCommandPos(::FrameID id, ::DoubleSeq_out position)
{
  _0RL_cd_c6f79e9630c46731_50000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_60000000, "getCommandPos", 14);
  _call_desc.arg_0 = id;

  _invoke(_call_desc);
  position = _call_desc.arg_1._retn();
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_50000000* tcd = (_0RL_cd_c6f79e9630c46731_50000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getFeedbackPos(tcd->arg_0, tcd->arg_1.out());


}

::CORBA::Long _objref_ArmUnit::getFeedbackPos(::FrameID id, ::DoubleSeq_out position)
{
  _0RL_cd_c6f79e9630c46731_50000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_70000000, "getFeedbackPos", 15);
  _call_desc.arg_0 = id;

  _invoke(_call_desc);
  position = _call_desc.arg_1._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cunsigned_plong
class _0RL_cd_c6f79e9630c46731_80000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_80000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::ULong arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_80000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_80000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  (::CORBA::ULong&)arg_0 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_80000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_90000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_80000000* tcd = (_0RL_cd_c6f79e9630c46731_80000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getJointAcceleration(tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::getJointAcceleration(::CORBA::ULong& accel)
{
  _0RL_cd_c6f79e9630c46731_80000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_90000000, "getJointAcceleration", 21);


  _invoke(_call_desc);
  accel = _call_desc.arg_0;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cArmLimitSeq
class _0RL_cd_c6f79e9630c46731_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_a0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ArmLimitSeq_var arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_a0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const ArmLimitSeq&) arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_0 = new ArmLimitSeq;
  (ArmLimitSeq&)arg_0 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_a0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_a0000000* tcd = (_0RL_cd_c6f79e9630c46731_a0000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getJointSoftLimit(tcd->arg_0.out());


}

::CORBA::Long _objref_ArmUnit::getJointSoftLimit(::ArmLimitSeq_out softLimit)
{
  _0RL_cd_c6f79e9630c46731_a0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b0000000, "getJointSoftLimit", 18);


  _invoke(_call_desc);
  softLimit = _call_desc.arg_0._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cAcceleration
class _0RL_cd_c6f79e9630c46731_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_c0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  Acceleration arg_0_;
  Acceleration* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_c0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const Acceleration&) *arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_c0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  (Acceleration&)*arg_0 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_c0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_c0000000* tcd = (_0RL_cd_c6f79e9630c46731_c0000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getLinearAcceleration(*tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::getLinearAcceleration(::Acceleration& accel)
{
  _0RL_cd_c6f79e9630c46731_c0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d0000000, "getLinearAcceleration", 22);
  _call_desc.arg_0 = &(::Acceleration&) accel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cDoubleSeq
class _0RL_cd_c6f79e9630c46731_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_e0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  DoubleSeq_var arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_e0000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  (const DoubleSeq&) arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_e0000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_0 = new DoubleSeq;
  (DoubleSeq&)arg_0 <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_e0000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_e0000000* tcd = (_0RL_cd_c6f79e9630c46731_e0000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getMaxJointVelocity(tcd->arg_0.out());


}

::CORBA::Long _objref_ArmUnit::getMaxJointVelocity(::DoubleSeq_out velocity)
{
  _0RL_cd_c6f79e9630c46731_e0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_f0000000, "getMaxJointVelocity", 20);


  _invoke(_call_desc);
  velocity = _call_desc.arg_0._retn();
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_01000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_e0000000* tcd = (_0RL_cd_c6f79e9630c46731_e0000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getMaxJointAcceleration(tcd->arg_0.out());


}

::CORBA::Long _objref_ArmUnit::getMaxJointAcceleration(::DoubleSeq_out accel)
{
  _0RL_cd_c6f79e9630c46731_e0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_01000000, "getMaxJointAcceleration", 24);


  _invoke(_call_desc);
  accel = _call_desc.arg_0._retn();
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_11000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_80000000* tcd = (_0RL_cd_c6f79e9630c46731_80000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getMotionRate(tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::getMotionRate(::CORBA::ULong& rate)
{
  _0RL_cd_c6f79e9630c46731_80000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_11000000, "getMotionRate", 14);


  _invoke(_call_desc);
  rate = _call_desc.arg_0;
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cunsigned_plong_o_cstring
class _0RL_cd_c6f79e9630c46731_21000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_21000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::ULong arg_0;
  ::CORBA::String_var arg_1;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_21000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  arg_0 >>= _n;
  _n.marshalString(arg_1,0);

}

void _0RL_cd_c6f79e9630c46731_21000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  (::CORBA::ULong&)arg_0 <<= _n;
  arg_1 = _n.unmarshalString(0);

}

const char* const _0RL_cd_c6f79e9630c46731_21000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_21000000* tcd = (_0RL_cd_c6f79e9630c46731_21000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getState(tcd->arg_0, tcd->arg_1.out());


}

::CORBA::Long _objref_ArmUnit::getState(::CORBA::ULong& statusId, ::CORBA::String_out message)
{
  _0RL_cd_c6f79e9630c46731_21000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_31000000, "getState", 9);


  _invoke(_call_desc);
  statusId = _call_desc.arg_0;
  message = _call_desc.arg_1._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_o_cstring
class _0RL_cd_c6f79e9630c46731_41000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_41000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::String_var arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_41000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;
  _n.marshalString(arg_0,0);

}

void _0RL_cd_c6f79e9630c46731_41000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;
  arg_0 = _n.unmarshalString(0);

}

const char* const _0RL_cd_c6f79e9630c46731_41000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_51000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_41000000* tcd = (_0RL_cd_c6f79e9630c46731_41000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->getVersion(tcd->arg_0.out());


}

::CORBA::Long _objref_ArmUnit::getVersion(::CORBA::String_out versionMessage)
{
  _0RL_cd_c6f79e9630c46731_41000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_51000000, "getVersion", 11);


  _invoke(_call_desc);
  versionMessage = _call_desc.arg_0._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_c6f79e9630c46731_61000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_61000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Boolean result;
};

void _0RL_cd_c6f79e9630c46731_61000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_c6f79e9630c46731_61000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_c6f79e9630c46731_61000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_71000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_61000000* tcd = (_0RL_cd_c6f79e9630c46731_61000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->isMoving();


}

::CORBA::Boolean _objref_ArmUnit::isMoving()
{
  _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_71000000, "isMoving", 9);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_61000000* tcd = (_0RL_cd_c6f79e9630c46731_61000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->isPowerOn();


}

::CORBA::Boolean _objref_ArmUnit::isPowerOn()
{
  _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_81000000, "isPowerOn", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_91000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_61000000* tcd = (_0RL_cd_c6f79e9630c46731_61000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->isServoOn();


}

::CORBA::Boolean _objref_ArmUnit::isServoOn()
{
  _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_91000000, "isServoOn", 10);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cDoubleSeq
class _0RL_cd_c6f79e9630c46731_a1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_a1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  DoubleSeq_var arg_0_;
  const DoubleSeq* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_a1000000::marshalArguments(cdrStream& _n)
{
  (const DoubleSeq&) *arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_a1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new DoubleSeq;
  (DoubleSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_c6f79e9630c46731_a1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_a1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_a1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_b1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_a1000000* tcd = (_0RL_cd_c6f79e9630c46731_a1000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveJogJoint(*tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::moveJogJoint(const ::DoubleSeq& velocity)
{
  _0RL_cd_c6f79e9630c46731_a1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b1000000, "moveJogJoint", 13);
  _call_desc.arg_0 = &(::DoubleSeq&) velocity;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cCommandFrameType_i_cCartesianVel_i_cdouble
class _0RL_cd_c6f79e9630c46731_c1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_c1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CommandFrameType arg_0;
  CartesianVel arg_1_;
  const CartesianVel* arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_c1000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const CartesianVel&) *arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_c1000000::unmarshalArguments(cdrStream& _n)
{
  (CommandFrameType&)arg_0 <<= _n;
  (CartesianVel&)arg_1_ <<= _n;
  arg_1 = &arg_1_;
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_c6f79e9630c46731_c1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_c1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_c1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_d1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_c1000000* tcd = (_0RL_cd_c6f79e9630c46731_c1000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveJogLinear(tcd->arg_0, *tcd->arg_1, tcd->arg_2);


}

::CORBA::Long _objref_ArmUnit::moveJogLinear(::CommandFrameType cpType, const ::CartesianVel& vel, ::CORBA::Double redundancyVel)
{
  _0RL_cd_c6f79e9630c46731_c1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d1000000, "moveJogLinear", 14);
  _call_desc.arg_0 = cpType;
  _call_desc.arg_1 = &(::CartesianVel&) vel;
  _call_desc.arg_2 = redundancyVel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cDoubleSeq_i_cdouble
class _0RL_cd_c6f79e9630c46731_e1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_e1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  DoubleSeq_var arg_0_;
  const DoubleSeq* arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_e1000000::marshalArguments(cdrStream& _n)
{
  (const DoubleSeq&) *arg_0 >>= _n;
  arg_1 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_e1000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new DoubleSeq;
  (DoubleSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  (::CORBA::Double&)arg_1 <<= _n;

}

void _0RL_cd_c6f79e9630c46731_e1000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_e1000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_e1000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_f1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_e1000000* tcd = (_0RL_cd_c6f79e9630c46731_e1000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveJointAbs(*tcd->arg_0, tcd->arg_1);


}

::CORBA::Long _objref_ArmUnit::moveJointAbs(const ::DoubleSeq& position, ::CORBA::Double velocity)
{
  _0RL_cd_c6f79e9630c46731_e1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_f1000000, "moveJointAbs", 13);
  _call_desc.arg_0 = &(::DoubleSeq&) position;
  _call_desc.arg_1 = velocity;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_02000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_e1000000* tcd = (_0RL_cd_c6f79e9630c46731_e1000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveJointRel(*tcd->arg_0, tcd->arg_1);


}

::CORBA::Long _objref_ArmUnit::moveJointRel(const ::DoubleSeq& position, ::CORBA::Double velocity)
{
  _0RL_cd_c6f79e9630c46731_e1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_02000000, "moveJointRel", 13);
  _call_desc.arg_0 = &(::DoubleSeq&) position;
  _call_desc.arg_1 = velocity;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cCommandFrameType_i_cCartesianPos_i_cdouble_i_cVelocity
class _0RL_cd_c6f79e9630c46731_12000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_12000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CommandFrameType arg_0;
  CartesianPos arg_1_;
  const CartesianPos* arg_1;
  ::CORBA::Double arg_2;
  Velocity arg_3_;
  const Velocity* arg_3;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_12000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const CartesianPos&) *arg_1 >>= _n;
  arg_2 >>= _n;
  (const Velocity&) *arg_3 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_12000000::unmarshalArguments(cdrStream& _n)
{
  (CommandFrameType&)arg_0 <<= _n;
  (CartesianPos&)arg_1_ <<= _n;
  arg_1 = &arg_1_;
  (::CORBA::Double&)arg_2 <<= _n;
  (Velocity&)arg_3_ <<= _n;
  arg_3 = &arg_3_;

}

void _0RL_cd_c6f79e9630c46731_12000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_12000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_12000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_12000000* tcd = (_0RL_cd_c6f79e9630c46731_12000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveLinearAbs(tcd->arg_0, *tcd->arg_1, tcd->arg_2, *tcd->arg_3);


}

::CORBA::Long _objref_ArmUnit::moveLinearAbs(::CommandFrameType cpType, const ::CartesianPos& absPos, ::CORBA::Double redundancyPos, const ::Velocity& vel)
{
  _0RL_cd_c6f79e9630c46731_12000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_22000000, "moveLinearAbs", 14);
  _call_desc.arg_0 = cpType;
  _call_desc.arg_1 = &(::CartesianPos&) absPos;
  _call_desc.arg_2 = redundancyPos;
  _call_desc.arg_3 = &(::Velocity&) vel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_32000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_12000000* tcd = (_0RL_cd_c6f79e9630c46731_12000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->moveLinearRel(tcd->arg_0, *tcd->arg_1, tcd->arg_2, *tcd->arg_3);


}

::CORBA::Long _objref_ArmUnit::moveLinearRel(::CommandFrameType cpType, const ::CartesianPos& relPos, ::CORBA::Double redundancyPos, const ::Velocity& vel)
{
  _0RL_cd_c6f79e9630c46731_12000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_32000000, "moveLinearRel", 14);
  _call_desc.arg_0 = cpType;
  _call_desc.arg_1 = &(::CartesianPos&) relPos;
  _call_desc.arg_2 = redundancyPos;
  _call_desc.arg_3 = &(::Velocity&) vel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->pause();


}

::CORBA::Long _objref_ArmUnit::pause()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_42000000, "pause", 6);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->powerOff();


}

::CORBA::Long _objref_ArmUnit::powerOff()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_52000000, "powerOff", 9);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->powerOn();


}

::CORBA::Long _objref_ArmUnit::powerOn()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_62000000, "powerOn", 8);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_72000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->resume();


}

::CORBA::Long _objref_ArmUnit::resume()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_72000000, "resume", 7);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_82000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->servoOff();


}

::CORBA::Long _objref_ArmUnit::servoOff()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_82000000, "servoOff", 9);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_92000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->servoOn();


}

::CORBA::Long _objref_ArmUnit::servoOn()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_92000000, "servoOn", 8);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cCartesianPos
class _0RL_cd_c6f79e9630c46731_a2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_a2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  CartesianPos arg_0_;
  const CartesianPos* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_a2000000::marshalArguments(cdrStream& _n)
{
  (const CartesianPos&) *arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_a2000000::unmarshalArguments(cdrStream& _n)
{
  (CartesianPos&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

void _0RL_cd_c6f79e9630c46731_a2000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_a2000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_a2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_b2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_a2000000* tcd = (_0RL_cd_c6f79e9630c46731_a2000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->setControlPointOffset(*tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::setControlPointOffset(const ::CartesianPos& offset)
{
  _0RL_cd_c6f79e9630c46731_a2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b2000000, "setControlPointOffset", 22);
  _call_desc.arg_0 = &(::CartesianPos&) offset;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cunsigned_plong
class _0RL_cd_c6f79e9630c46731_c2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_c2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::ULong arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_c2000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_c2000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::ULong&)arg_0 <<= _n;

}

void _0RL_cd_c6f79e9630c46731_c2000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_c2000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_c2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_d2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_c2000000* tcd = (_0RL_cd_c6f79e9630c46731_c2000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->setJogTimeout(tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::setJogTimeout(::CORBA::ULong time)
{
  _0RL_cd_c6f79e9630c46731_c2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d2000000, "setJogTimeout", 14);
  _call_desc.arg_0 = time;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_e2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_c2000000* tcd = (_0RL_cd_c6f79e9630c46731_c2000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->setJointAcceleration(tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::setJointAcceleration(::CORBA::ULong accel)
{
  _0RL_cd_c6f79e9630c46731_c2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_e2000000, "setJointAcceleration", 21);
  _call_desc.arg_0 = accel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _clong_i_cAcceleration
class _0RL_cd_c6f79e9630c46731_f2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_c6f79e9630c46731_f2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  Acceleration arg_0_;
  const Acceleration* arg_0;
  ::CORBA::Long result;
};

void _0RL_cd_c6f79e9630c46731_f2000000::marshalArguments(cdrStream& _n)
{
  (const Acceleration&) *arg_0 >>= _n;

}

void _0RL_cd_c6f79e9630c46731_f2000000::unmarshalArguments(cdrStream& _n)
{
  (Acceleration&)arg_0_ <<= _n;
  arg_0 = &arg_0_;

}

void _0RL_cd_c6f79e9630c46731_f2000000::marshalReturnedValues(cdrStream& _n)
{
  result >>= _n;

}

void _0RL_cd_c6f79e9630c46731_f2000000::unmarshalReturnedValues(cdrStream& _n)
{
  (::CORBA::Long&)result <<= _n;

}

const char* const _0RL_cd_c6f79e9630c46731_f2000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_03000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_f2000000* tcd = (_0RL_cd_c6f79e9630c46731_f2000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->setLinearAcceleration(*tcd->arg_0);


}

::CORBA::Long _objref_ArmUnit::setLinearAcceleration(const ::Acceleration& accel)
{
  _0RL_cd_c6f79e9630c46731_f2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_03000000, "setLinearAcceleration", 22);
  _call_desc.arg_0 = &(::Acceleration&) accel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_c6f79e9630c46731_13000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_c6f79e9630c46731_00000000* tcd = (_0RL_cd_c6f79e9630c46731_00000000*)cd;
  _impl_ArmUnit* impl = (_impl_ArmUnit*) svnt->_ptrToInterface(ArmUnit::_PD_repoId);
  tcd->result = impl->stop();


}

::CORBA::Long _objref_ArmUnit::stop()
{
  _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_13000000, "stop", 5);


  _invoke(_call_desc);
  return _call_desc.result;


}
_pof_ArmUnit::~_pof_ArmUnit() {}


omniObjRef*
_pof_ArmUnit::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_ArmUnit(ior, id);
}


::CORBA::Boolean
_pof_ArmUnit::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::ArmUnit::_PD_repoId) )
    return 1;
  
  return 0;
}

const _pof_ArmUnit _the_pof_ArmUnit;

_impl_ArmUnit::~_impl_ArmUnit() {}


::CORBA::Boolean
_impl_ArmUnit::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "abort") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_10000000, "abort", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "clearAlarms") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_20000000, "clearAlarms", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getActiveAlarm") ) {

    _0RL_cd_c6f79e9630c46731_30000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_40000000, "getActiveAlarm", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getCommandPos") ) {

    _0RL_cd_c6f79e9630c46731_50000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_60000000, "getCommandPos", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getFeedbackPos") ) {

    _0RL_cd_c6f79e9630c46731_50000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_70000000, "getFeedbackPos", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointAcceleration") ) {

    _0RL_cd_c6f79e9630c46731_80000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_90000000, "getJointAcceleration", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getJointSoftLimit") ) {

    _0RL_cd_c6f79e9630c46731_a0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b0000000, "getJointSoftLimit", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getLinearAcceleration") ) {

    _0RL_cd_c6f79e9630c46731_c0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d0000000, "getLinearAcceleration", 22, 1);
    _call_desc.arg_0 = &_call_desc.arg_0_;
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMaxJointVelocity") ) {

    _0RL_cd_c6f79e9630c46731_e0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_f0000000, "getMaxJointVelocity", 20, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMaxJointAcceleration") ) {

    _0RL_cd_c6f79e9630c46731_e0000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_01000000, "getMaxJointAcceleration", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getMotionRate") ) {

    _0RL_cd_c6f79e9630c46731_80000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_11000000, "getMotionRate", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getState") ) {

    _0RL_cd_c6f79e9630c46731_21000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_31000000, "getState", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getVersion") ) {

    _0RL_cd_c6f79e9630c46731_41000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_51000000, "getVersion", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "isMoving") ) {

    _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_71000000, "isMoving", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "isPowerOn") ) {

    _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_81000000, "isPowerOn", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "isServoOn") ) {

    _0RL_cd_c6f79e9630c46731_61000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_91000000, "isServoOn", 10, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveJogJoint") ) {

    _0RL_cd_c6f79e9630c46731_a1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b1000000, "moveJogJoint", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveJogLinear") ) {

    _0RL_cd_c6f79e9630c46731_c1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d1000000, "moveJogLinear", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveJointAbs") ) {

    _0RL_cd_c6f79e9630c46731_e1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_f1000000, "moveJointAbs", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveJointRel") ) {

    _0RL_cd_c6f79e9630c46731_e1000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_02000000, "moveJointRel", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveLinearAbs") ) {

    _0RL_cd_c6f79e9630c46731_12000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_22000000, "moveLinearAbs", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "moveLinearRel") ) {

    _0RL_cd_c6f79e9630c46731_12000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_32000000, "moveLinearRel", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "pause") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_42000000, "pause", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "powerOff") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_52000000, "powerOff", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "powerOn") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_62000000, "powerOn", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "resume") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_72000000, "resume", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOff") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_82000000, "servoOff", 9, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "servoOn") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_92000000, "servoOn", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setControlPointOffset") ) {

    _0RL_cd_c6f79e9630c46731_a2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_b2000000, "setControlPointOffset", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setJogTimeout") ) {

    _0RL_cd_c6f79e9630c46731_c2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_d2000000, "setJogTimeout", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setJointAcceleration") ) {

    _0RL_cd_c6f79e9630c46731_c2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_e2000000, "setJointAcceleration", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setLinearAcceleration") ) {

    _0RL_cd_c6f79e9630c46731_f2000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_03000000, "setLinearAcceleration", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stop") ) {

    _0RL_cd_c6f79e9630c46731_00000000 _call_desc(_0RL_lcfn_c6f79e9630c46731_13000000, "stop", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
_impl_ArmUnit::_ptrToInterface(const char* id)
{
  if( id == ::ArmUnit::_PD_repoId )
    return (::_impl_ArmUnit*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::ArmUnit::_PD_repoId) )
    return (::_impl_ArmUnit*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_ArmUnit::_mostDerivedRepoId()
{
  return ::ArmUnit::_PD_repoId;
}

POA_ArmUnit::~POA_ArmUnit() {}

