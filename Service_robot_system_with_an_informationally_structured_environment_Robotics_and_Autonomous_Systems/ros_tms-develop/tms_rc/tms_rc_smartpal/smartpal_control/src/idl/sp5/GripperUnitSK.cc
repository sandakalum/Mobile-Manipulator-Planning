// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "GripperUnit.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



GripperUnit_ptr GripperUnit_Helper::_nil() {
  return ::GripperUnit::_nil();
}

::CORBA::Boolean GripperUnit_Helper::is_nil(::GripperUnit_ptr p) {
  return ::CORBA::is_nil(p);

}

void GripperUnit_Helper::release(::GripperUnit_ptr p) {
  ::CORBA::release(p);
}

void GripperUnit_Helper::marshalObjRef(::GripperUnit_ptr obj, cdrStream& s) {
  ::GripperUnit::_marshalObjRef(obj, s);
}

GripperUnit_ptr GripperUnit_Helper::unmarshalObjRef(cdrStream& s) {
  return ::GripperUnit::_unmarshalObjRef(s);
}

void GripperUnit_Helper::duplicate(::GripperUnit_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

GripperUnit_ptr
GripperUnit::_duplicate(::GripperUnit_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

GripperUnit_ptr
GripperUnit::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


GripperUnit_ptr
GripperUnit::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

GripperUnit_ptr
GripperUnit::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_GripperUnit _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_GripperUnit* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_GripperUnit;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* GripperUnit::_PD_repoId = "IDL:GripperUnit:1.0";


_objref_GripperUnit::~_objref_GripperUnit() {
  
}


_objref_GripperUnit::_objref_GripperUnit(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::GripperUnit::_PD_repoId, ior, id, 1),
   _objref_GripperExtAxes(ior, id)
   
{
  _PR_setobj(this);
}

void*
_objref_GripperUnit::_ptrToObjRef(const char* id)
{
  if( id == ::GripperUnit::_PD_repoId )
    return (::GripperUnit_ptr) this;
  if( id == ::GripperExtAxes::_PD_repoId )
    return (::GripperExtAxes_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::GripperUnit::_PD_repoId) )
    return (::GripperUnit_ptr) this;
  if( omni::strMatch(id, ::GripperExtAxes::_PD_repoId) )
    return (::GripperExtAxes_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cdouble_i_cdouble_i_cdouble
class _0RL_cd_957349eefc747ba5_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_957349eefc747ba5_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_957349eefc747ba5_00000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;

}

void _0RL_cd_957349eefc747ba5_00000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Double&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;

}

void _0RL_cd_957349eefc747ba5_00000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_957349eefc747ba5_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

const char* const _0RL_cd_957349eefc747ba5_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_957349eefc747ba5_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_957349eefc747ba5_00000000* tcd = (_0RL_cd_957349eefc747ba5_00000000*)cd;
  _impl_GripperUnit* impl = (_impl_GripperUnit*) svnt->_ptrToInterface(GripperUnit::_PD_repoId);
  tcd->result = impl->move(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

::CORBA::Boolean _objref_GripperUnit::move(::CORBA::Double pos, ::CORBA::Double velocity, ::CORBA::Double accel)
{
  _0RL_cd_957349eefc747ba5_00000000 _call_desc(_0RL_lcfn_957349eefc747ba5_10000000, "move", 5);
  _call_desc.arg_0 = pos;
  _call_desc.arg_1 = velocity;
  _call_desc.arg_2 = accel;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_o_cdouble
class _0RL_cd_957349eefc747ba5_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_957349eefc747ba5_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  static const char* const _user_exns[];

  ::CORBA::Double arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_957349eefc747ba5_20000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  arg_0 >>= _n;

}

void _0RL_cd_957349eefc747ba5_20000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (::CORBA::Double&)arg_0 <<= _n;

}

const char* const _0RL_cd_957349eefc747ba5_20000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_957349eefc747ba5_30000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_957349eefc747ba5_20000000* tcd = (_0RL_cd_957349eefc747ba5_20000000*)cd;
  _impl_GripperUnit* impl = (_impl_GripperUnit*) svnt->_ptrToInterface(GripperUnit::_PD_repoId);
  tcd->result = impl->getFeedback(tcd->arg_0);


}

::CORBA::Boolean _objref_GripperUnit::getFeedback(::CORBA::Double& fbPos)
{
  _0RL_cd_957349eefc747ba5_20000000 _call_desc(_0RL_lcfn_957349eefc747ba5_30000000, "getFeedback", 12);


  _invoke(_call_desc);
  fbPos = _call_desc.arg_0;
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_957349eefc747ba5_40000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_957349eefc747ba5_20000000* tcd = (_0RL_cd_957349eefc747ba5_20000000*)cd;
  _impl_GripperUnit* impl = (_impl_GripperUnit*) svnt->_ptrToInterface(GripperUnit::_PD_repoId);
  tcd->result = impl->getCommand(tcd->arg_0);


}

::CORBA::Boolean _objref_GripperUnit::getCommand(::CORBA::Double& cmdPos)
{
  _0RL_cd_957349eefc747ba5_20000000 _call_desc(_0RL_lcfn_957349eefc747ba5_40000000, "getCommand", 11);


  _invoke(_call_desc);
  cmdPos = _call_desc.arg_0;
  return _call_desc.result;


}
_pof_GripperUnit::~_pof_GripperUnit() {}


omniObjRef*
_pof_GripperUnit::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::_objref_GripperUnit(ior, id);
}


::CORBA::Boolean
_pof_GripperUnit::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::GripperUnit::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, GripperExtAxes::_PD_repoId) )
    return 1;


  return 0;
}

const _pof_GripperUnit _the_pof_GripperUnit;

_impl_GripperUnit::~_impl_GripperUnit() {}


::CORBA::Boolean
_impl_GripperUnit::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "move") ) {

    _0RL_cd_957349eefc747ba5_00000000 _call_desc(_0RL_lcfn_957349eefc747ba5_10000000, "move", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getFeedback") ) {

    _0RL_cd_957349eefc747ba5_20000000 _call_desc(_0RL_lcfn_957349eefc747ba5_30000000, "getFeedback", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getCommand") ) {

    _0RL_cd_957349eefc747ba5_20000000 _call_desc(_0RL_lcfn_957349eefc747ba5_40000000, "getCommand", 11, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( _impl_GripperExtAxes::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((_impl_GripperExtAxes*)this)->
      _impl_GripperExtAxes::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
_impl_GripperUnit::_ptrToInterface(const char* id)
{
  if( id == ::GripperUnit::_PD_repoId )
    return (::_impl_GripperUnit*) this;
  if( id == ::GripperExtAxes::_PD_repoId )
    return (::_impl_GripperExtAxes*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::GripperUnit::_PD_repoId) )
    return (::_impl_GripperUnit*) this;
  if( omni::strMatch(id, ::GripperExtAxes::_PD_repoId) )
    return (::_impl_GripperExtAxes*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
_impl_GripperUnit::_mostDerivedRepoId()
{
  return ::GripperUnit::_PD_repoId;
}

POA_GripperUnit::~POA_GripperUnit() {}

